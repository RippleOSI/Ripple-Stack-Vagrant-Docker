# -*- mode: ruby -*-
# vi: set ft=ruby :

# Check for required plugins and install missing plugins
required_plugins = %w( vagrant-vbguest vagrant-docker-compose)
required_plugins.each do |plugin|
    exec "vagrant plugin install #{plugin};vagrant #{ARGV.join(" ")}" unless Vagrant.has_plugin? plugin || ARGV[0] == 'plugin'
end

Vagrant.configure("2") do |config|
  # start with an Ubuntu 18.04 box
  config.vm.box = "rippleosi/desktop"
  config.vm.box_version = "0.1.0"

  # forward ports in the guest's microservices to host ports
  config.vm.network "forwarded_port", guest: 8000, host: 8000 # conductor-service-phr
  config.vm.network "forwarded_port", guest: 8001, host: 8001 # authentication-service-phr
  config.vm.network "forwarded_port", guest: 8002, host: 8002 # mpi-service
  config.vm.network "forwarded_port", guest: 8003, host: 8003 # cdr-service-openehr
  config.vm.network "forwarded_port", guest: 8080, host: 8080 # openid-connect-server

  config.vm.provider "virtualbox" do |v|
    v.memory = 4096
    v.cpus = 2
    v.gui = true
  end

  # Sync the local clones of the development repos with the VM filesystem
  config.vm.synced_folder "../../ripple-pulsetile", "/ripple-pulsetile"   # Pulsetile
  config.vm.synced_folder "../../ripple-qewd", "/ripple-qewd"

  # put the headless-version's docker-compose.yml in the right place
  config.vm.synced_folder "../headless-version/", "/docker/"

  # install docker
  config.vm.provision :docker, run: "always"

  # PROVISION CONTAINERS USING DOCKER-COMPOSE
  config.vm.provision :docker_compose, yml: "/docker/docker-compose.yml", rebuild: true, run: "always"
end
